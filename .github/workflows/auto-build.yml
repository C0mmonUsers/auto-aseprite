name: Auto build Aseprite

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    name: Build Aseprite for Windows x64
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download Aseprite source
        run: python download.py

      - name: Install dependencies (Ninja + OpenSSL)
        run: |
          choco install ninja -y
          choco install openssl -y

      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Configure and Build
        run: |
          mkdir build
          cd build
          cmake "${{ github.workspace }}/src/aseprite" -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DLAF_BACKEND=skia -DSKIA_DIR="${{ github.workspace }}/src/skia" -DSKIA_LIBRARY_DIR="${{ github.workspace }}/src/skia/out/Release-x64" -DSKIA_LIBRARY="${{ github.workspace }}/src/skia/out/Release-x64/skia.lib"
          cmake --build . --config MinSizeRel --target aseprite

      - name: Copy OpenSSL DLLs
        run: |
          $opensslPath = "C:/Program Files/OpenSSL-Win64/bin"
          if (Test-Path "$opensslPath/libcrypto-3-x64.dll") {
            Copy-Item "$opensslPath/libcrypto-3-x64.dll" "./build/bin" -Force
            Copy-Item "$opensslPath/libssl-3-x64.dll" "./build/bin" -Force
          } else {
            Write-Host "OpenSSL DLLs not found at $opensslPath"
          }

      - name: Get version
        id: get_version
        shell: pwsh
        run: |
          $version = Get-Content version.txt
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Zip build
        run: |
          cd build/bin
          7z a ../../Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}.zip *

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}
          tag_name: ${{ steps.get_version.outputs.version }}
          files: |
            Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}.zip
